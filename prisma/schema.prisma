// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["referentialIntegrity"]
}

datasource db {
    provider             = "mysql"
    url                  = env("DATABASE_URL")
    referentialIntegrity = "prisma"
}

// Necessary for Next auth
model Account {
    id                       String  @id @default(cuid())
    userId                   String
    type                     String
    provider                 String
    providerAccountId        String
    refresh_token            String? @db.Text
    refresh_token_expires_in Int?
    access_token             String? @db.Text
    expires_at               Int?
    token_type               String?
    scope                    String?
    id_token                 String? @db.Text
    session_state            String?
    oauth_token_secret       String? @db.Text
    oauth_token              String? @db.Text
    user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model User {
    id              String           @id @default(cuid())
    name            String?
    email           String?          @unique
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    tree            Tree?
    analytics       Analytics?
    withdraw        Withdraw?
    businessAddress BusinessAddress?
    craft           Craft?
}

model Tree {
    id          String  @id @default(cuid())
    userId      String  @unique
    user        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    slug        String  @unique
    theme       String  @default("light")
    imageKey    String?
    image       String?
    bio         String?
    links       Json?
    ads_enabled Boolean @default(true)

    @@index([userId])
}

model Withdraw {
    id               String  @id @default(cuid())
    userId           String  @unique
    user             User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    withdraw_enabled Boolean @default(false)

    @@index([userId])
}

model Analytics {
    id         String  @id @default(cuid())
    userId     String  @unique
    user       User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    totalViews Int     @default(0)
    views      View[]
    clicks     Click[]

    @@index([userId])
}

model View {
    id           Int       @id @default(autoincrement())
    analyticsId  String
    analytics    Analytics @relation(fields: [analyticsId], references: [id], onDelete: Cascade)
    viewerIp     String
    created_at   DateTime  @default(now())
    day          String
    slug         String
    from_country String?
    from_city    String?
    had_adblock  Boolean   @default(false)

    @@unique([viewerIp, day])
    @@index([analyticsId])
}

model Click {
    id          Int       @id @default(autoincrement())
    analyticsId String
    analytics   Analytics @relation(fields: [analyticsId], references: [id], onDelete: Cascade)
    viewerIp    String
    created_at  DateTime  @default(now())
    day         String
    slug        String
    element     String

    @@index([analyticsId])
}

model BusinessAddress {
    id      Int     @id @default(autoincrement())
    userId  String  @unique
    user    User    @relation(fields: [userId], references: [id], onDelete: Cascade)
    street1 String
    street2 String?
    city    String
    state   String
    zipcode String
    country String
}

enum Craft {
    Comedy
    Developer
    Education
    Fashion
    Filmmaker
    Financial
    Freelancer
    Gaming
    Influencer
    Medicine
    Model
    Music
    Podcast
    Politics
    Tax
    Travel
    Writer
    Other
}
