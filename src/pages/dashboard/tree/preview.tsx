import { SocialMediaComponent } from "@components/social-medias-components";
import { NextPage } from "next";
import Head from "next/head";
import { useSyncExternalStore } from "react";
import { SocialMedia } from "utils/shared";
import { Tab } from "@headlessui/react";
import { FontAwesomeIcon } from "@fortawesome/react-fontawesome";
import { faMobilePhone } from "@fortawesome/free-solid-svg-icons";
import { faWindowMaximize } from "@fortawesome/free-regular-svg-icons";

interface treeLocalStorage {
  slug?: string | null;
  bio?: string | null;
  theme?: string | null;
  image?: string | null;
  ads_enabled?: boolean;
  links?: {
    id: string;
    position: number;
    media: SocialMedia;
    url: string;
  }[];
}

function subscribe(callback: () => void) {
  window.addEventListener("storage", callback);
  return () => {
    window.removeEventListener("storage", callback);
  };
}

function useTreeLocalStorage() {
  return useSyncExternalStore(
    subscribe,
    () => window.localStorage.getItem("tree"),
    () => null
  );
}

const Index: NextPage = () => {
  const treeLocalStorage = useTreeLocalStorage();
  const tree: treeLocalStorage | null = treeLocalStorage
    ? JSON.parse(treeLocalStorage)
    : null;
  if (!tree) return <div>not tree dude</div>;
  return (
    <>
      <Head>
        <title>Preview </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex h-screen flex-col items-stretch space-y-4 p-6">
        <div className="flex w-full grow flex-col items-center space-y-2">
          <Tab.Group manual>
            <Tab.List className="tabs  tabs-boxed gap-4 drop-shadow-md">
              <Tab
                className={({ selected }) =>
                  `${selected ? "tab-active" : ""} tab gap-2
                  `
                }
              >
                <FontAwesomeIcon icon={faWindowMaximize} />
                Window
              </Tab>
              <Tab
                className={({ selected }) =>
                  `${selected ? "tab-active" : ""} tab  gap-2
                  `
                }
              >
                <FontAwesomeIcon icon={faMobilePhone} />
                Phone
              </Tab>
            </Tab.List>
            <Tab.Panels className="flex grow flex-col items-center justify-center self-stretch">
              <Tab.Panel className="flex grow flex-col self-stretch">
                <WindowPreview tree={tree} />
              </Tab.Panel>
              <Tab.Panel className="flex grow flex-col justify-center self-stretch">
                <PhonePreview tree={tree} />
              </Tab.Panel>
            </Tab.Panels>
          </Tab.Group>
        </div>
      </div>
    </>
  );
};

interface PreviewProps {
  tree: treeLocalStorage;
}

const PhonePreview = ({ tree }: PreviewProps) => {
  return (
    <div className="mockup-phone drop-shadow-lg">
      <div className="camera"></div>
      <div className="display">
        <div className="artboard artboard-demo phone-1 md:phone-2">
          <Preview tree={tree} />
        </div>
      </div>
    </div>
  );
};

const WindowPreview = ({ tree }: PreviewProps) => {
  return (
    <div className="h-full">
      <div className="mockup-window relative h-full border border-base-200 bg-base-300 drop-shadow-lg">
        <div className="absolute top-0 box-border h-full w-full overflow-hidden pt-12">
          <div className="relative h-screen max-h-full overflow-auto ">
            <div className="flex min-h-full flex-col">
              <Preview tree={tree} />
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

const Preview = ({ tree }: PreviewProps) => {
  return (
    <div className="relative flex min-h-full w-full grow flex-col overflow-auto">
      <div
        data-theme={tree.theme}
        className="flex min-h-fit grow flex-col self-stretch bg-red-400"
      >
        <div className="flex grow flex-col items-center bg-gradient-to-b from-base-100 to-base-300">
          <div className="flex min-h-full w-full max-w-[760px] flex-col items-center space-y-4 p-10">
            {tree?.image ? (
              <div className="avatar h-24 w-24 drop-shadow-2xl">
                <img src={tree.image} className="h-auto w-auto rounded-full" />
              </div>
            ) : (
              <div className="avatar placeholder drop-shadow-2xl">
                <div className="w-24 rounded-full bg-base-100"></div>
              </div>
            )}
            <h1 className="text-lg font-bold">{tree.slug}</h1>
            {tree.bio && <h2 className="text-md text-justify">{tree.bio}</h2>}
            <div className="flex w-full flex-col items-center space-y-2 py-4 ">
              {tree?.links?.map((link) => (
                <a
                  className="btn btn-lg no-animation flex w-full normal-case"
                  key={link.id}
                  href={link.url}
                  target="_blank"
                  rel="noreferrer"
                >
                  <SocialMediaComponent
                    media={link.media}
                    className="flew-row relative flex w-full items-center justify-center font-light"
                    iconClassName="absolute left-0 text-2xl"
                  />
                </a>
              ))}
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Index;
